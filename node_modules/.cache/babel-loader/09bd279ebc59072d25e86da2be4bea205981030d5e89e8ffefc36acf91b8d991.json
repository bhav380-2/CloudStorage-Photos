{"ast":null,"code":"var _jsxFileName = \"/home/codex/skills/webDev/react/project/photofolio/photos/src/App.js\",\n  _s = $RefreshSig$();\n// Importing Hooks\nimport { useState, useReducer, useEffect } from 'react';\n// Importing Components\nimport Navbar from './components/Navbar';\nimport AlbumsList from './components/AlbumsList';\nimport ImagesList from './components/ImagesList';\n// Importing Firebase\nimport { collection, deleteDoc, doc, onSnapshot, setDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseInit\";\n// Importing React-Toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //using reducer to mainting the albums state which contains an array of album names (titles)\n  const [albums, dispatch] = useReducer(reducer, {\n    titles: []\n  });\n  //using states for currently selected album, for loading spinner, for new data to upadte new img details\n  let [currentAlbum, setCurrentAlbum] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [newimageDetails, setNewimageDetails] = useState(null);\n  // the reducer function to fetch and add new albums\n  function reducer(state, action) {\n    let {\n      payload\n    } = action;\n    switch (action.type) {\n      case \"ADD\":\n        return {\n          titles: [payload.data, ...state.titles]\n        };\n      case \"GET\":\n        payload.setIsLoading(false);\n        return {\n          titles: payload.albums\n        };\n      default:\n        return state;\n    }\n  }\n\n  // useEffect to fetch existing albums from the firebase db\n  useEffect(() => {\n    onSnapshot(collection(db, \"albums\"), snapshot => {\n      const albums = snapshot.docs.map(doc => {\n        return doc.id;\n      });\n      dispatch({\n        type: \"GET\",\n        payload: {\n          albums,\n          setIsLoading\n        }\n      });\n    });\n  }, []);\n\n  // function to add album with unique name in the db and the albums array\n  const addAlbum = data => {\n    for (let album of albums.titles) {\n      if (data === album) {\n        toast.error(\"Album already Exists\");\n        return;\n      }\n    }\n    async function setData() {\n      await setDoc(doc(db, \"albums\", data), {\n        imagesInfo: []\n      });\n    }\n    setData();\n    dispatch({\n      type: \"ADD\",\n      payload: {\n        data\n      }\n    });\n    toast.success(\"Album Created successfully.\");\n  };\n\n  // function to delete album which the user wants to delete\n  const deleteAlbum = data => {\n    async function del() {\n      await deleteDoc(doc(db, \"albums\", data));\n    }\n    del();\n    toast.success(\"Album Deleted successfully.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 1500,\n      hideProgressBar: false,\n      newestOnTop: true,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true,\n      theme: \"light\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), currentAlbum ? /*#__PURE__*/_jsxDEV(ImagesList, {\n      currentAlbum: currentAlbum,\n      setCurrentAlbum: setCurrentAlbum,\n      newimageDetails: newimageDetails,\n      setNewimageDetails: setNewimageDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AlbumsList, {\n      setCurrentAlbum: setCurrentAlbum,\n      albums: albums.titles,\n      isLoading: isLoading,\n      addAlbum: addAlbum,\n      deleteAlbum: deleteAlbum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1b+RyCt8S4+QydIbsIIRKWuYz8k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useReducer","useEffect","Navbar","AlbumsList","ImagesList","collection","deleteDoc","doc","onSnapshot","setDoc","db","ToastContainer","toast","jsxDEV","_jsxDEV","App","_s","albums","dispatch","reducer","titles","currentAlbum","setCurrentAlbum","isLoading","setIsLoading","newimageDetails","setNewimageDetails","state","action","payload","type","data","snapshot","docs","map","id","addAlbum","album","error","setData","imagesInfo","success","deleteAlbum","del","className","children","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/codex/skills/webDev/react/project/photofolio/photos/src/App.js"],"sourcesContent":["// Importing Hooks\nimport { useState, useReducer, useEffect } from 'react';\n// Importing Components\nimport Navbar from './components/Navbar';\nimport AlbumsList from './components/AlbumsList';\nimport ImagesList from './components/ImagesList';\n// Importing Firebase\nimport {\n  collection,\n  deleteDoc,\n  doc,\n  onSnapshot,\n  setDoc\n} from \"firebase/firestore\";\nimport { db } from \"./firebaseInit\";\n// Importing React-Toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  //using reducer to mainting the albums state which contains an array of album names (titles)\n  const [albums, dispatch] = useReducer(reducer, { titles: [] });\n  //using states for currently selected album, for loading spinner, for new data to upadte new img details\n  let [currentAlbum, setCurrentAlbum] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [newimageDetails, setNewimageDetails] = useState(null);\n  // the reducer function to fetch and add new albums\n  function reducer(state, action) {\n    let { payload } = action;\n    switch (action.type) {\n      case \"ADD\":        \n        return { titles: [payload.data, ...state.titles] };\n      case \"GET\":\n        payload.setIsLoading(false);\n        return { titles: payload.albums };\n      default:\n        return state;\n    }\n  }\n\n  // useEffect to fetch existing albums from the firebase db\n  useEffect(() => {\n    onSnapshot(collection(db, \"albums\"), (snapshot) => {\n      const albums = snapshot.docs.map((doc) => {\n        return doc.id;\n      });\n      dispatch({ type: \"GET\", payload: { albums, setIsLoading } });\n    });\n  }, []);\n\n  // function to add album with unique name in the db and the albums array\n  const addAlbum = (data) => {\n    for (let album of albums.titles) {\n      if (data === album) {\n        toast.error(\"Album already Exists\");\n        return;\n      }\n    }\n    async function setData() {\n      await setDoc(doc(db, \"albums\", data), { imagesInfo: [] });\n    }\n    setData();\n    dispatch({ type: \"ADD\", payload: { data } });\n    toast.success(\"Album Created successfully.\");\n  }\n\n  // function to delete album which the user wants to delete\n  const deleteAlbum = (data) => {\n    async function del() {\n      await deleteDoc(doc(db, \"albums\", data));\n    }\n    del();\n    toast.success(\"Album Deleted successfully.\");\n  }\n\n  return (\n    <div className='app'>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={1500}\n        hideProgressBar={false}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n      <Navbar />\n      {currentAlbum ?\n        <ImagesList\n          currentAlbum={currentAlbum}\n          setCurrentAlbum={setCurrentAlbum}\n          newimageDetails={newimageDetails}\n          setNewimageDetails={setNewimageDetails}\n        />\n        :\n        <AlbumsList\n          setCurrentAlbum={setCurrentAlbum}\n          albums={albums.titles}\n          isLoading={isLoading}\n          addAlbum={addAlbum}\n          deleteAlbum={deleteAlbum}\n        />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}